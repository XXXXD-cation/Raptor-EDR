// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.21.12
// source: proto/agent.proto

package agentv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilterAction int32

const (
	FilterAction_FILTER_ACTION_UNSPECIFIED FilterAction = 0
	FilterAction_FILTER_ACTION_ALLOW       FilterAction = 1
	FilterAction_FILTER_ACTION_DENY        FilterAction = 2
)

// Enum value maps for FilterAction.
var (
	FilterAction_name = map[int32]string{
		0: "FILTER_ACTION_UNSPECIFIED",
		1: "FILTER_ACTION_ALLOW",
		2: "FILTER_ACTION_DENY",
	}
	FilterAction_value = map[string]int32{
		"FILTER_ACTION_UNSPECIFIED": 0,
		"FILTER_ACTION_ALLOW":       1,
		"FILTER_ACTION_DENY":        2,
	}
)

func (x FilterAction) Enum() *FilterAction {
	p := new(FilterAction)
	*p = x
	return p
}

func (x FilterAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterAction) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_agent_proto_enumTypes[0].Descriptor()
}

func (FilterAction) Type() protoreflect.EnumType {
	return &file_proto_agent_proto_enumTypes[0]
}

func (x FilterAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterAction.Descriptor instead.
func (FilterAction) EnumDescriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{0}
}

type FilterCondition int32

const (
	FilterCondition_FILTER_CONDITION_UNSPECIFIED FilterCondition = 0
	FilterCondition_FILTER_CONDITION_EQUALS      FilterCondition = 1
	FilterCondition_FILTER_CONDITION_CONTAINS    FilterCondition = 2
	FilterCondition_FILTER_CONDITION_STARTS_WITH FilterCondition = 3
	FilterCondition_FILTER_CONDITION_ENDS_WITH   FilterCondition = 4
	FilterCondition_FILTER_CONDITION_REGEX       FilterCondition = 5
)

// Enum value maps for FilterCondition.
var (
	FilterCondition_name = map[int32]string{
		0: "FILTER_CONDITION_UNSPECIFIED",
		1: "FILTER_CONDITION_EQUALS",
		2: "FILTER_CONDITION_CONTAINS",
		3: "FILTER_CONDITION_STARTS_WITH",
		4: "FILTER_CONDITION_ENDS_WITH",
		5: "FILTER_CONDITION_REGEX",
	}
	FilterCondition_value = map[string]int32{
		"FILTER_CONDITION_UNSPECIFIED": 0,
		"FILTER_CONDITION_EQUALS":      1,
		"FILTER_CONDITION_CONTAINS":    2,
		"FILTER_CONDITION_STARTS_WITH": 3,
		"FILTER_CONDITION_ENDS_WITH":   4,
		"FILTER_CONDITION_REGEX":       5,
	}
)

func (x FilterCondition) Enum() *FilterCondition {
	p := new(FilterCondition)
	*p = x
	return p
}

func (x FilterCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_agent_proto_enumTypes[1].Descriptor()
}

func (FilterCondition) Type() protoreflect.EnumType {
	return &file_proto_agent_proto_enumTypes[1]
}

func (x FilterCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterCondition.Descriptor instead.
func (FilterCondition) EnumDescriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{1}
}

// RegisterAgentRequest contains agent registration information
type RegisterAgentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Platform      string                 `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"` // linux, windows, macos
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Capabilities  *AgentCapabilities     `protobuf:"bytes,5,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	Tags          map[string]string      `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterAgentRequest) Reset() {
	*x = RegisterAgentRequest{}
	mi := &file_proto_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAgentRequest) ProtoMessage() {}

func (x *RegisterAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAgentRequest.ProtoReflect.Descriptor instead.
func (*RegisterAgentRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterAgentRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *RegisterAgentRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegisterAgentRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *RegisterAgentRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RegisterAgentRequest) GetCapabilities() *AgentCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *RegisterAgentRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// RegisterAgentResponse contains registration response
type RegisterAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Config        *AgentConfig           `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterAgentResponse) Reset() {
	*x = RegisterAgentResponse{}
	mi := &file_proto_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAgentResponse) ProtoMessage() {}

func (x *RegisterAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAgentResponse.ProtoReflect.Descriptor instead.
func (*RegisterAgentResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterAgentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterAgentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterAgentResponse) GetConfig() *AgentConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// AgentCapabilities describes what the agent can collect
type AgentCapabilities struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ProcessEvents      bool                   `protobuf:"varint,1,opt,name=process_events,json=processEvents,proto3" json:"process_events,omitempty"`
	FileEvents         bool                   `protobuf:"varint,2,opt,name=file_events,json=fileEvents,proto3" json:"file_events,omitempty"`
	NetworkEvents      bool                   `protobuf:"varint,3,opt,name=network_events,json=networkEvents,proto3" json:"network_events,omitempty"`
	RegistryEvents     bool                   `protobuf:"varint,4,opt,name=registry_events,json=registryEvents,proto3" json:"registry_events,omitempty"` // Windows only
	AuthEvents         bool                   `protobuf:"varint,5,opt,name=auth_events,json=authEvents,proto3" json:"auth_events,omitempty"`
	SupportedPlatforms []string               `protobuf:"bytes,6,rep,name=supported_platforms,json=supportedPlatforms,proto3" json:"supported_platforms,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AgentCapabilities) Reset() {
	*x = AgentCapabilities{}
	mi := &file_proto_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCapabilities) ProtoMessage() {}

func (x *AgentCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCapabilities.ProtoReflect.Descriptor instead.
func (*AgentCapabilities) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{2}
}

func (x *AgentCapabilities) GetProcessEvents() bool {
	if x != nil {
		return x.ProcessEvents
	}
	return false
}

func (x *AgentCapabilities) GetFileEvents() bool {
	if x != nil {
		return x.FileEvents
	}
	return false
}

func (x *AgentCapabilities) GetNetworkEvents() bool {
	if x != nil {
		return x.NetworkEvents
	}
	return false
}

func (x *AgentCapabilities) GetRegistryEvents() bool {
	if x != nil {
		return x.RegistryEvents
	}
	return false
}

func (x *AgentCapabilities) GetAuthEvents() bool {
	if x != nil {
		return x.AuthEvents
	}
	return false
}

func (x *AgentCapabilities) GetSupportedPlatforms() []string {
	if x != nil {
		return x.SupportedPlatforms
	}
	return nil
}

// AgentConfig contains configuration sent from server to agent
type AgentConfig struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Collection               *CollectionConfig      `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Filters                  []*FilterRule          `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	BatchSize                int32                  `protobuf:"varint,3,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	BatchTimeoutSeconds      int32                  `protobuf:"varint,4,opt,name=batch_timeout_seconds,json=batchTimeoutSeconds,proto3" json:"batch_timeout_seconds,omitempty"`
	HeartbeatIntervalSeconds int32                  `protobuf:"varint,5,opt,name=heartbeat_interval_seconds,json=heartbeatIntervalSeconds,proto3" json:"heartbeat_interval_seconds,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *AgentConfig) Reset() {
	*x = AgentConfig{}
	mi := &file_proto_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentConfig) ProtoMessage() {}

func (x *AgentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentConfig.ProtoReflect.Descriptor instead.
func (*AgentConfig) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{3}
}

func (x *AgentConfig) GetCollection() *CollectionConfig {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *AgentConfig) GetFilters() []*FilterRule {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *AgentConfig) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *AgentConfig) GetBatchTimeoutSeconds() int32 {
	if x != nil {
		return x.BatchTimeoutSeconds
	}
	return 0
}

func (x *AgentConfig) GetHeartbeatIntervalSeconds() int32 {
	if x != nil {
		return x.HeartbeatIntervalSeconds
	}
	return 0
}

// CollectionConfig specifies what events to collect
type CollectionConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProcessEvents  bool                   `protobuf:"varint,1,opt,name=process_events,json=processEvents,proto3" json:"process_events,omitempty"`
	FileEvents     bool                   `protobuf:"varint,2,opt,name=file_events,json=fileEvents,proto3" json:"file_events,omitempty"`
	NetworkEvents  bool                   `protobuf:"varint,3,opt,name=network_events,json=networkEvents,proto3" json:"network_events,omitempty"`
	RegistryEvents bool                   `protobuf:"varint,4,opt,name=registry_events,json=registryEvents,proto3" json:"registry_events,omitempty"`
	AuthEvents     bool                   `protobuf:"varint,5,opt,name=auth_events,json=authEvents,proto3" json:"auth_events,omitempty"`
	MonitorPaths   []string               `protobuf:"bytes,6,rep,name=monitor_paths,json=monitorPaths,proto3" json:"monitor_paths,omitempty"`
	RegistryKeys   []string               `protobuf:"bytes,7,rep,name=registry_keys,json=registryKeys,proto3" json:"registry_keys,omitempty"` // Windows only
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CollectionConfig) Reset() {
	*x = CollectionConfig{}
	mi := &file_proto_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionConfig) ProtoMessage() {}

func (x *CollectionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionConfig.ProtoReflect.Descriptor instead.
func (*CollectionConfig) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{4}
}

func (x *CollectionConfig) GetProcessEvents() bool {
	if x != nil {
		return x.ProcessEvents
	}
	return false
}

func (x *CollectionConfig) GetFileEvents() bool {
	if x != nil {
		return x.FileEvents
	}
	return false
}

func (x *CollectionConfig) GetNetworkEvents() bool {
	if x != nil {
		return x.NetworkEvents
	}
	return false
}

func (x *CollectionConfig) GetRegistryEvents() bool {
	if x != nil {
		return x.RegistryEvents
	}
	return false
}

func (x *CollectionConfig) GetAuthEvents() bool {
	if x != nil {
		return x.AuthEvents
	}
	return false
}

func (x *CollectionConfig) GetMonitorPaths() []string {
	if x != nil {
		return x.MonitorPaths
	}
	return nil
}

func (x *CollectionConfig) GetRegistryKeys() []string {
	if x != nil {
		return x.RegistryKeys
	}
	return nil
}

// FilterRule defines event filtering rules
type FilterRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Action        FilterAction           `protobuf:"varint,3,opt,name=action,proto3,enum=raptor.agent.v1.FilterAction" json:"action,omitempty"`
	Condition     FilterCondition        `protobuf:"varint,4,opt,name=condition,proto3,enum=raptor.agent.v1.FilterCondition" json:"condition,omitempty"`
	Fields        map[string]string      `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterRule) Reset() {
	*x = FilterRule{}
	mi := &file_proto_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterRule) ProtoMessage() {}

func (x *FilterRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterRule.ProtoReflect.Descriptor instead.
func (*FilterRule) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{5}
}

func (x *FilterRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilterRule) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *FilterRule) GetAction() FilterAction {
	if x != nil {
		return x.Action
	}
	return FilterAction_FILTER_ACTION_UNSPECIFIED
}

func (x *FilterRule) GetCondition() FilterCondition {
	if x != nil {
		return x.Condition
	}
	return FilterCondition_FILTER_CONDITION_UNSPECIFIED
}

func (x *FilterRule) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// TelemetryBatch contains a batch of events from the agent
type TelemetryBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Events        []*Event               `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	Signature     string                 `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"` // Optional integrity signature
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TelemetryBatch) Reset() {
	*x = TelemetryBatch{}
	mi := &file_proto_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryBatch) ProtoMessage() {}

func (x *TelemetryBatch) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryBatch.ProtoReflect.Descriptor instead.
func (*TelemetryBatch) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{6}
}

func (x *TelemetryBatch) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *TelemetryBatch) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TelemetryBatch) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *TelemetryBatch) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

// TelemetryResponse acknowledges receipt of telemetry data
type TelemetryResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message         string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	EventsProcessed int32                  `protobuf:"varint,3,opt,name=events_processed,json=eventsProcessed,proto3" json:"events_processed,omitempty"`
	EventsDropped   int32                  `protobuf:"varint,4,opt,name=events_dropped,json=eventsDropped,proto3" json:"events_dropped,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TelemetryResponse) Reset() {
	*x = TelemetryResponse{}
	mi := &file_proto_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryResponse) ProtoMessage() {}

func (x *TelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryResponse.ProtoReflect.Descriptor instead.
func (*TelemetryResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{7}
}

func (x *TelemetryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TelemetryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TelemetryResponse) GetEventsProcessed() int32 {
	if x != nil {
		return x.EventsProcessed
	}
	return 0
}

func (x *TelemetryResponse) GetEventsDropped() int32 {
	if x != nil {
		return x.EventsDropped
	}
	return 0
}

// Event represents a single telemetry event
type Event struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	EventType string                 `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	AgentId   string                 `protobuf:"bytes,4,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Hostname  string                 `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Platform  string                 `protobuf:"bytes,6,opt,name=platform,proto3" json:"platform,omitempty"`
	Tags      map[string]string      `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Event-specific data (one of the following)
	//
	// Types that are valid to be assigned to EventData:
	//
	//	*Event_ProcessEvent
	//	*Event_FileEvent
	//	*Event_NetworkEvent
	//	*Event_RegistryEvent
	//	*Event_AuthEvent
	EventData     isEvent_EventData `protobuf_oneof:"event_data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_proto_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{8}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *Event) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Event) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Event) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Event) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Event) GetEventData() isEvent_EventData {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *Event) GetProcessEvent() *ProcessEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_ProcessEvent); ok {
			return x.ProcessEvent
		}
	}
	return nil
}

func (x *Event) GetFileEvent() *FileEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_FileEvent); ok {
			return x.FileEvent
		}
	}
	return nil
}

func (x *Event) GetNetworkEvent() *NetworkEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_NetworkEvent); ok {
			return x.NetworkEvent
		}
	}
	return nil
}

func (x *Event) GetRegistryEvent() *RegistryEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_RegistryEvent); ok {
			return x.RegistryEvent
		}
	}
	return nil
}

func (x *Event) GetAuthEvent() *AuthEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_AuthEvent); ok {
			return x.AuthEvent
		}
	}
	return nil
}

type isEvent_EventData interface {
	isEvent_EventData()
}

type Event_ProcessEvent struct {
	ProcessEvent *ProcessEvent `protobuf:"bytes,10,opt,name=process_event,json=processEvent,proto3,oneof"`
}

type Event_FileEvent struct {
	FileEvent *FileEvent `protobuf:"bytes,11,opt,name=file_event,json=fileEvent,proto3,oneof"`
}

type Event_NetworkEvent struct {
	NetworkEvent *NetworkEvent `protobuf:"bytes,12,opt,name=network_event,json=networkEvent,proto3,oneof"`
}

type Event_RegistryEvent struct {
	RegistryEvent *RegistryEvent `protobuf:"bytes,13,opt,name=registry_event,json=registryEvent,proto3,oneof"`
}

type Event_AuthEvent struct {
	AuthEvent *AuthEvent `protobuf:"bytes,14,opt,name=auth_event,json=authEvent,proto3,oneof"`
}

func (*Event_ProcessEvent) isEvent_EventData() {}

func (*Event_FileEvent) isEvent_EventData() {}

func (*Event_NetworkEvent) isEvent_EventData() {}

func (*Event_RegistryEvent) isEvent_EventData() {}

func (*Event_AuthEvent) isEvent_EventData() {}

// ProcessEvent represents process creation/termination events
type ProcessEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           int32                  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Ppid          int32                  `protobuf:"varint,2,opt,name=ppid,proto3" json:"ppid,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Path          string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	CommandLine   string                 `protobuf:"bytes,5,opt,name=command_line,json=commandLine,proto3" json:"command_line,omitempty"`
	User          string                 `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	ExitCode      int32                  `protobuf:"varint,7,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`                                                      // Only for process exit events
	Hashes        map[string]string      `protobuf:"bytes,8,rep,name=hashes,proto3" json:"hashes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // md5, sha1, sha256
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessEvent) Reset() {
	*x = ProcessEvent{}
	mi := &file_proto_agent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEvent) ProtoMessage() {}

func (x *ProcessEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEvent.ProtoReflect.Descriptor instead.
func (*ProcessEvent) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{9}
}

func (x *ProcessEvent) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessEvent) GetPpid() int32 {
	if x != nil {
		return x.Ppid
	}
	return 0
}

func (x *ProcessEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessEvent) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ProcessEvent) GetCommandLine() string {
	if x != nil {
		return x.CommandLine
	}
	return ""
}

func (x *ProcessEvent) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ProcessEvent) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ProcessEvent) GetHashes() map[string]string {
	if x != nil {
		return x.Hashes
	}
	return nil
}

// FileEvent represents file system events
type FileEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Action        string                 `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"` // create, modify, delete, rename
	Pid           int32                  `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	ProcessName   string                 `protobuf:"bytes,4,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	User          string                 `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Hashes        map[string]string      `protobuf:"bytes,6,rep,name=hashes,proto3" json:"hashes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Size          int64                  `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileEvent) Reset() {
	*x = FileEvent{}
	mi := &file_proto_agent_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEvent) ProtoMessage() {}

func (x *FileEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEvent.ProtoReflect.Descriptor instead.
func (*FileEvent) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{10}
}

func (x *FileEvent) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *FileEvent) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *FileEvent) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *FileEvent) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *FileEvent) GetHashes() map[string]string {
	if x != nil {
		return x.Hashes
	}
	return nil
}

func (x *FileEvent) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// NetworkEvent represents network connection events
type NetworkEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           int32                  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	ProcessName   string                 `protobuf:"bytes,2,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	Protocol      string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"` // tcp, udp
	LocalIp       string                 `protobuf:"bytes,4,opt,name=local_ip,json=localIp,proto3" json:"local_ip,omitempty"`
	LocalPort     int32                  `protobuf:"varint,5,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
	RemoteIp      string                 `protobuf:"bytes,6,opt,name=remote_ip,json=remoteIp,proto3" json:"remote_ip,omitempty"`
	RemotePort    int32                  `protobuf:"varint,7,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
	Direction     string                 `protobuf:"bytes,8,opt,name=direction,proto3" json:"direction,omitempty"` // inbound, outbound
	Domain        string                 `protobuf:"bytes,9,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkEvent) Reset() {
	*x = NetworkEvent{}
	mi := &file_proto_agent_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEvent) ProtoMessage() {}

func (x *NetworkEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEvent.ProtoReflect.Descriptor instead.
func (*NetworkEvent) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{11}
}

func (x *NetworkEvent) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *NetworkEvent) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *NetworkEvent) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *NetworkEvent) GetLocalIp() string {
	if x != nil {
		return x.LocalIp
	}
	return ""
}

func (x *NetworkEvent) GetLocalPort() int32 {
	if x != nil {
		return x.LocalPort
	}
	return 0
}

func (x *NetworkEvent) GetRemoteIp() string {
	if x != nil {
		return x.RemoteIp
	}
	return ""
}

func (x *NetworkEvent) GetRemotePort() int32 {
	if x != nil {
		return x.RemotePort
	}
	return 0
}

func (x *NetworkEvent) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *NetworkEvent) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// RegistryEvent represents Windows registry events
type RegistryEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           int32                  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	ProcessName   string                 `protobuf:"bytes,2,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	KeyPath       string                 `protobuf:"bytes,3,opt,name=key_path,json=keyPath,proto3" json:"key_path,omitempty"`
	ValueName     string                 `protobuf:"bytes,4,opt,name=value_name,json=valueName,proto3" json:"value_name,omitempty"`
	ValueData     string                 `protobuf:"bytes,5,opt,name=value_data,json=valueData,proto3" json:"value_data,omitempty"`
	ValueType     string                 `protobuf:"bytes,6,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	Action        string                 `protobuf:"bytes,7,opt,name=action,proto3" json:"action,omitempty"` // create, modify, delete
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistryEvent) Reset() {
	*x = RegistryEvent{}
	mi := &file_proto_agent_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryEvent) ProtoMessage() {}

func (x *RegistryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryEvent.ProtoReflect.Descriptor instead.
func (*RegistryEvent) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{12}
}

func (x *RegistryEvent) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *RegistryEvent) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *RegistryEvent) GetKeyPath() string {
	if x != nil {
		return x.KeyPath
	}
	return ""
}

func (x *RegistryEvent) GetValueName() string {
	if x != nil {
		return x.ValueName
	}
	return ""
}

func (x *RegistryEvent) GetValueData() string {
	if x != nil {
		return x.ValueData
	}
	return ""
}

func (x *RegistryEvent) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *RegistryEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// AuthEvent represents authentication events
type AuthEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	LogonType     string                 `protobuf:"bytes,3,opt,name=logon_type,json=logonType,proto3" json:"logon_type,omitempty"`
	SourceIp      string                 `protobuf:"bytes,4,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	Success       bool                   `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	FailureCode   string                 `protobuf:"bytes,6,opt,name=failure_code,json=failureCode,proto3" json:"failure_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthEvent) Reset() {
	*x = AuthEvent{}
	mi := &file_proto_agent_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthEvent) ProtoMessage() {}

func (x *AuthEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthEvent.ProtoReflect.Descriptor instead.
func (*AuthEvent) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{13}
}

func (x *AuthEvent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthEvent) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *AuthEvent) GetLogonType() string {
	if x != nil {
		return x.LogonType
	}
	return ""
}

func (x *AuthEvent) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *AuthEvent) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthEvent) GetFailureCode() string {
	if x != nil {
		return x.FailureCode
	}
	return ""
}

// GetTasksRequest requests tasks for the agent
type GetTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	LastCheck     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_check,json=lastCheck,proto3" json:"last_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTasksRequest) Reset() {
	*x = GetTasksRequest{}
	mi := &file_proto_agent_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksRequest) ProtoMessage() {}

func (x *GetTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksRequest.ProtoReflect.Descriptor instead.
func (*GetTasksRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{14}
}

func (x *GetTasksRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *GetTasksRequest) GetLastCheck() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheck
	}
	return nil
}

// GetTasksResponse contains tasks assigned to the agent
type GetTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTasksResponse) Reset() {
	*x = GetTasksResponse{}
	mi := &file_proto_agent_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksResponse) ProtoMessage() {}

func (x *GetTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksResponse.ProtoReflect.Descriptor instead.
func (*GetTasksResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{15}
}

func (x *GetTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// Task represents a task assigned to the agent
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskType      string                 `protobuf:"bytes,2,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"` // collect_file, run_command, update_config, etc.
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Priority      int32                  `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_proto_agent_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{16}
}

func (x *Task) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *Task) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *Task) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Task) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

// TaskResult contains the result of task execution
type TaskResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"` // Task-specific result data
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_proto_agent_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{17}
}

func (x *TaskResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskResult) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *TaskResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TaskResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskResult) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TaskResult) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

// TaskResultResponse acknowledges receipt of task result
type TaskResultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResultResponse) Reset() {
	*x = TaskResultResponse{}
	mi := &file_proto_agent_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResultResponse) ProtoMessage() {}

func (x *TaskResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResultResponse.ProtoReflect.Descriptor instead.
func (*TaskResultResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{18}
}

func (x *TaskResultResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TaskResultResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// HeartbeatRequest contains agent status information
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status        *AgentStatus           `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Stats         *AgentStats            `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_proto_agent_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{19}
}

func (x *HeartbeatRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *HeartbeatRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HeartbeatRequest) GetStatus() *AgentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *HeartbeatRequest) GetStats() *AgentStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// HeartbeatResponse contains server response to heartbeat
type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ConfigUpdate  *AgentConfig           `protobuf:"bytes,3,opt,name=config_update,json=configUpdate,proto3" json:"config_update,omitempty"` // Optional configuration updates
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_proto_agent_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{20}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HeartbeatResponse) GetConfigUpdate() *AgentConfig {
	if x != nil {
		return x.ConfigUpdate
	}
	return nil
}

// AgentStatus represents the current status of the agent
type AgentStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         string                 `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"` // running, stopped, error, updating
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	LastEventTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_event_time,json=lastEventTime,proto3" json:"last_event_time,omitempty"`
	ActiveSensors int32                  `protobuf:"varint,4,opt,name=active_sensors,json=activeSensors,proto3" json:"active_sensors,omitempty"`
	Errors        []string               `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentStatus) Reset() {
	*x = AgentStatus{}
	mi := &file_proto_agent_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStatus) ProtoMessage() {}

func (x *AgentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStatus.ProtoReflect.Descriptor instead.
func (*AgentStatus) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{21}
}

func (x *AgentStatus) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AgentStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AgentStatus) GetLastEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEventTime
	}
	return nil
}

func (x *AgentStatus) GetActiveSensors() int32 {
	if x != nil {
		return x.ActiveSensors
	}
	return 0
}

func (x *AgentStatus) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

// AgentStats contains agent performance statistics
type AgentStats struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	EventsCollected uint64                 `protobuf:"varint,1,opt,name=events_collected,json=eventsCollected,proto3" json:"events_collected,omitempty"`
	EventsFiltered  uint64                 `protobuf:"varint,2,opt,name=events_filtered,json=eventsFiltered,proto3" json:"events_filtered,omitempty"`
	EventsDropped   uint64                 `protobuf:"varint,3,opt,name=events_dropped,json=eventsDropped,proto3" json:"events_dropped,omitempty"`
	BytesSent       uint64                 `protobuf:"varint,4,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	CollectionRate  float64                `protobuf:"fixed64,5,opt,name=collection_rate,json=collectionRate,proto3" json:"collection_rate,omitempty"` // events per second
	UptimeSeconds   uint64                 `protobuf:"varint,6,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	MemoryUsageMb   float64                `protobuf:"fixed64,7,opt,name=memory_usage_mb,json=memoryUsageMb,proto3" json:"memory_usage_mb,omitempty"`
	CpuUsagePercent float64                `protobuf:"fixed64,8,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	ErrorCount      uint64                 `protobuf:"varint,9,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AgentStats) Reset() {
	*x = AgentStats{}
	mi := &file_proto_agent_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentStats) ProtoMessage() {}

func (x *AgentStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentStats.ProtoReflect.Descriptor instead.
func (*AgentStats) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{22}
}

func (x *AgentStats) GetEventsCollected() uint64 {
	if x != nil {
		return x.EventsCollected
	}
	return 0
}

func (x *AgentStats) GetEventsFiltered() uint64 {
	if x != nil {
		return x.EventsFiltered
	}
	return 0
}

func (x *AgentStats) GetEventsDropped() uint64 {
	if x != nil {
		return x.EventsDropped
	}
	return 0
}

func (x *AgentStats) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *AgentStats) GetCollectionRate() float64 {
	if x != nil {
		return x.CollectionRate
	}
	return 0
}

func (x *AgentStats) GetUptimeSeconds() uint64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *AgentStats) GetMemoryUsageMb() float64 {
	if x != nil {
		return x.MemoryUsageMb
	}
	return 0
}

func (x *AgentStats) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *AgentStats) GetErrorCount() uint64 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

var File_proto_agent_proto protoreflect.FileDescriptor

const file_proto_agent_proto_rawDesc = "" +
	"\n" +
	"\x11proto/agent.proto\x12\x0fraptor.agent.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc9\x02\n" +
	"\x14RegisterAgentRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x1a\n" +
	"\bplatform\x18\x03 \x01(\tR\bplatform\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12F\n" +
	"\fcapabilities\x18\x05 \x01(\v2\".raptor.agent.v1.AgentCapabilitiesR\fcapabilities\x12C\n" +
	"\x04tags\x18\x06 \x03(\v2/.raptor.agent.v1.RegisterAgentRequest.TagsEntryR\x04tags\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x81\x01\n" +
	"\x15RegisterAgentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x124\n" +
	"\x06config\x18\x03 \x01(\v2\x1c.raptor.agent.v1.AgentConfigR\x06config\"\xfd\x01\n" +
	"\x11AgentCapabilities\x12%\n" +
	"\x0eprocess_events\x18\x01 \x01(\bR\rprocessEvents\x12\x1f\n" +
	"\vfile_events\x18\x02 \x01(\bR\n" +
	"fileEvents\x12%\n" +
	"\x0enetwork_events\x18\x03 \x01(\bR\rnetworkEvents\x12'\n" +
	"\x0fregistry_events\x18\x04 \x01(\bR\x0eregistryEvents\x12\x1f\n" +
	"\vauth_events\x18\x05 \x01(\bR\n" +
	"authEvents\x12/\n" +
	"\x13supported_platforms\x18\x06 \x03(\tR\x12supportedPlatforms\"\x98\x02\n" +
	"\vAgentConfig\x12A\n" +
	"\n" +
	"collection\x18\x01 \x01(\v2!.raptor.agent.v1.CollectionConfigR\n" +
	"collection\x125\n" +
	"\afilters\x18\x02 \x03(\v2\x1b.raptor.agent.v1.FilterRuleR\afilters\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x03 \x01(\x05R\tbatchSize\x122\n" +
	"\x15batch_timeout_seconds\x18\x04 \x01(\x05R\x13batchTimeoutSeconds\x12<\n" +
	"\x1aheartbeat_interval_seconds\x18\x05 \x01(\x05R\x18heartbeatIntervalSeconds\"\x95\x02\n" +
	"\x10CollectionConfig\x12%\n" +
	"\x0eprocess_events\x18\x01 \x01(\bR\rprocessEvents\x12\x1f\n" +
	"\vfile_events\x18\x02 \x01(\bR\n" +
	"fileEvents\x12%\n" +
	"\x0enetwork_events\x18\x03 \x01(\bR\rnetworkEvents\x12'\n" +
	"\x0fregistry_events\x18\x04 \x01(\bR\x0eregistryEvents\x12\x1f\n" +
	"\vauth_events\x18\x05 \x01(\bR\n" +
	"authEvents\x12#\n" +
	"\rmonitor_paths\x18\x06 \x03(\tR\fmonitorPaths\x12#\n" +
	"\rregistry_keys\x18\a \x03(\tR\fregistryKeys\"\xb2\x02\n" +
	"\n" +
	"FilterRule\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x125\n" +
	"\x06action\x18\x03 \x01(\x0e2\x1d.raptor.agent.v1.FilterActionR\x06action\x12>\n" +
	"\tcondition\x18\x04 \x01(\x0e2 .raptor.agent.v1.FilterConditionR\tcondition\x12?\n" +
	"\x06fields\x18\x05 \x03(\v2'.raptor.agent.v1.FilterRule.FieldsEntryR\x06fields\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb3\x01\n" +
	"\x0eTelemetryBatch\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12.\n" +
	"\x06events\x18\x03 \x03(\v2\x16.raptor.agent.v1.EventR\x06events\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\tR\tsignature\"\x99\x01\n" +
	"\x11TelemetryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12)\n" +
	"\x10events_processed\x18\x03 \x01(\x05R\x0feventsProcessed\x12%\n" +
	"\x0eevents_dropped\x18\x04 \x01(\x05R\reventsDropped\"\x8f\x05\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1d\n" +
	"\n" +
	"event_type\x18\x03 \x01(\tR\teventType\x12\x19\n" +
	"\bagent_id\x18\x04 \x01(\tR\aagentId\x12\x1a\n" +
	"\bhostname\x18\x05 \x01(\tR\bhostname\x12\x1a\n" +
	"\bplatform\x18\x06 \x01(\tR\bplatform\x124\n" +
	"\x04tags\x18\a \x03(\v2 .raptor.agent.v1.Event.TagsEntryR\x04tags\x12D\n" +
	"\rprocess_event\x18\n" +
	" \x01(\v2\x1d.raptor.agent.v1.ProcessEventH\x00R\fprocessEvent\x12;\n" +
	"\n" +
	"file_event\x18\v \x01(\v2\x1a.raptor.agent.v1.FileEventH\x00R\tfileEvent\x12D\n" +
	"\rnetwork_event\x18\f \x01(\v2\x1d.raptor.agent.v1.NetworkEventH\x00R\fnetworkEvent\x12G\n" +
	"\x0eregistry_event\x18\r \x01(\v2\x1e.raptor.agent.v1.RegistryEventH\x00R\rregistryEvent\x12;\n" +
	"\n" +
	"auth_event\x18\x0e \x01(\v2\x1a.raptor.agent.v1.AuthEventH\x00R\tauthEvent\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\f\n" +
	"\n" +
	"event_data\"\xae\x02\n" +
	"\fProcessEvent\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x05R\x03pid\x12\x12\n" +
	"\x04ppid\x18\x02 \x01(\x05R\x04ppid\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12!\n" +
	"\fcommand_line\x18\x05 \x01(\tR\vcommandLine\x12\x12\n" +
	"\x04user\x18\x06 \x01(\tR\x04user\x12\x1b\n" +
	"\texit_code\x18\a \x01(\x05R\bexitCode\x12A\n" +
	"\x06hashes\x18\b \x03(\v2).raptor.agent.v1.ProcessEvent.HashesEntryR\x06hashes\x1a9\n" +
	"\vHashesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8f\x02\n" +
	"\tFileEvent\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x16\n" +
	"\x06action\x18\x02 \x01(\tR\x06action\x12\x10\n" +
	"\x03pid\x18\x03 \x01(\x05R\x03pid\x12!\n" +
	"\fprocess_name\x18\x04 \x01(\tR\vprocessName\x12\x12\n" +
	"\x04user\x18\x05 \x01(\tR\x04user\x12>\n" +
	"\x06hashes\x18\x06 \x03(\v2&.raptor.agent.v1.FileEvent.HashesEntryR\x06hashes\x12\x12\n" +
	"\x04size\x18\a \x01(\x03R\x04size\x1a9\n" +
	"\vHashesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8d\x02\n" +
	"\fNetworkEvent\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x05R\x03pid\x12!\n" +
	"\fprocess_name\x18\x02 \x01(\tR\vprocessName\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12\x19\n" +
	"\blocal_ip\x18\x04 \x01(\tR\alocalIp\x12\x1d\n" +
	"\n" +
	"local_port\x18\x05 \x01(\x05R\tlocalPort\x12\x1b\n" +
	"\tremote_ip\x18\x06 \x01(\tR\bremoteIp\x12\x1f\n" +
	"\vremote_port\x18\a \x01(\x05R\n" +
	"remotePort\x12\x1c\n" +
	"\tdirection\x18\b \x01(\tR\tdirection\x12\x16\n" +
	"\x06domain\x18\t \x01(\tR\x06domain\"\xd4\x01\n" +
	"\rRegistryEvent\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x05R\x03pid\x12!\n" +
	"\fprocess_name\x18\x02 \x01(\tR\vprocessName\x12\x19\n" +
	"\bkey_path\x18\x03 \x01(\tR\akeyPath\x12\x1d\n" +
	"\n" +
	"value_name\x18\x04 \x01(\tR\tvalueName\x12\x1d\n" +
	"\n" +
	"value_data\x18\x05 \x01(\tR\tvalueData\x12\x1d\n" +
	"\n" +
	"value_type\x18\x06 \x01(\tR\tvalueType\x12\x16\n" +
	"\x06action\x18\a \x01(\tR\x06action\"\xb8\x01\n" +
	"\tAuthEvent\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12\x1d\n" +
	"\n" +
	"logon_type\x18\x03 \x01(\tR\tlogonType\x12\x1b\n" +
	"\tsource_ip\x18\x04 \x01(\tR\bsourceIp\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12!\n" +
	"\ffailure_code\x18\x06 \x01(\tR\vfailureCode\"g\n" +
	"\x0fGetTasksRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x129\n" +
	"\n" +
	"last_check\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tlastCheck\"?\n" +
	"\x10GetTasksResponse\x12+\n" +
	"\x05tasks\x18\x01 \x03(\v2\x15.raptor.agent.v1.TaskR\x05tasks\"\xd4\x02\n" +
	"\x04Task\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_type\x18\x02 \x01(\tR\btaskType\x12E\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2%.raptor.agent.v1.Task.ParametersEntryR\n" +
	"parameters\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12\x1a\n" +
	"\bpriority\x18\x06 \x01(\x05R\bpriority\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc7\x01\n" +
	"\n" +
	"TaskResult\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\x12=\n" +
	"\fcompleted_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\"H\n" +
	"\x12TaskResultResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xd0\x01\n" +
	"\x10HeartbeatRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x124\n" +
	"\x06status\x18\x03 \x01(\v2\x1c.raptor.agent.v1.AgentStatusR\x06status\x121\n" +
	"\x05stats\x18\x04 \x01(\v2\x1b.raptor.agent.v1.AgentStatsR\x05stats\"\x8a\x01\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12A\n" +
	"\rconfig_update\x18\x03 \x01(\v2\x1c.raptor.agent.v1.AgentConfigR\fconfigUpdate\"\xc0\x01\n" +
	"\vAgentStatus\x12\x14\n" +
	"\x05state\x18\x01 \x01(\tR\x05state\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12B\n" +
	"\x0flast_event_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\rlastEventTime\x12%\n" +
	"\x0eactive_sensors\x18\x04 \x01(\x05R\ractiveSensors\x12\x16\n" +
	"\x06errors\x18\x05 \x03(\tR\x06errors\"\xeb\x02\n" +
	"\n" +
	"AgentStats\x12)\n" +
	"\x10events_collected\x18\x01 \x01(\x04R\x0feventsCollected\x12'\n" +
	"\x0fevents_filtered\x18\x02 \x01(\x04R\x0eeventsFiltered\x12%\n" +
	"\x0eevents_dropped\x18\x03 \x01(\x04R\reventsDropped\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x04 \x01(\x04R\tbytesSent\x12'\n" +
	"\x0fcollection_rate\x18\x05 \x01(\x01R\x0ecollectionRate\x12%\n" +
	"\x0euptime_seconds\x18\x06 \x01(\x04R\ruptimeSeconds\x12&\n" +
	"\x0fmemory_usage_mb\x18\a \x01(\x01R\rmemoryUsageMb\x12*\n" +
	"\x11cpu_usage_percent\x18\b \x01(\x01R\x0fcpuUsagePercent\x12\x1f\n" +
	"\verror_count\x18\t \x01(\x04R\n" +
	"errorCount*^\n" +
	"\fFilterAction\x12\x1d\n" +
	"\x19FILTER_ACTION_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13FILTER_ACTION_ALLOW\x10\x01\x12\x16\n" +
	"\x12FILTER_ACTION_DENY\x10\x02*\xcd\x01\n" +
	"\x0fFilterCondition\x12 \n" +
	"\x1cFILTER_CONDITION_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17FILTER_CONDITION_EQUALS\x10\x01\x12\x1d\n" +
	"\x19FILTER_CONDITION_CONTAINS\x10\x02\x12 \n" +
	"\x1cFILTER_CONDITION_STARTS_WITH\x10\x03\x12\x1e\n" +
	"\x1aFILTER_CONDITION_ENDS_WITH\x10\x04\x12\x1a\n" +
	"\x16FILTER_CONDITION_REGEX\x10\x052\xc1\x03\n" +
	"\fAgentService\x12^\n" +
	"\rRegisterAgent\x12%.raptor.agent.v1.RegisterAgentRequest\x1a&.raptor.agent.v1.RegisterAgentResponse\x12X\n" +
	"\rSendTelemetry\x12\x1f.raptor.agent.v1.TelemetryBatch\x1a\".raptor.agent.v1.TelemetryResponse(\x010\x01\x12O\n" +
	"\bGetTasks\x12 .raptor.agent.v1.GetTasksRequest\x1a!.raptor.agent.v1.GetTasksResponse\x12R\n" +
	"\x0eSendTaskResult\x12\x1b.raptor.agent.v1.TaskResult\x1a#.raptor.agent.v1.TaskResultResponse\x12R\n" +
	"\tHeartbeat\x12!.raptor.agent.v1.HeartbeatRequest\x1a\".raptor.agent.v1.HeartbeatResponseB;Z9github.com/XXXXD-cation/Raptor-EDR/proto/agent/v1;agentv1b\x06proto3"

var (
	file_proto_agent_proto_rawDescOnce sync.Once
	file_proto_agent_proto_rawDescData []byte
)

func file_proto_agent_proto_rawDescGZIP() []byte {
	file_proto_agent_proto_rawDescOnce.Do(func() {
		file_proto_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_agent_proto_rawDesc), len(file_proto_agent_proto_rawDesc)))
	})
	return file_proto_agent_proto_rawDescData
}

var file_proto_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_proto_agent_proto_goTypes = []any{
	(FilterAction)(0),             // 0: raptor.agent.v1.FilterAction
	(FilterCondition)(0),          // 1: raptor.agent.v1.FilterCondition
	(*RegisterAgentRequest)(nil),  // 2: raptor.agent.v1.RegisterAgentRequest
	(*RegisterAgentResponse)(nil), // 3: raptor.agent.v1.RegisterAgentResponse
	(*AgentCapabilities)(nil),     // 4: raptor.agent.v1.AgentCapabilities
	(*AgentConfig)(nil),           // 5: raptor.agent.v1.AgentConfig
	(*CollectionConfig)(nil),      // 6: raptor.agent.v1.CollectionConfig
	(*FilterRule)(nil),            // 7: raptor.agent.v1.FilterRule
	(*TelemetryBatch)(nil),        // 8: raptor.agent.v1.TelemetryBatch
	(*TelemetryResponse)(nil),     // 9: raptor.agent.v1.TelemetryResponse
	(*Event)(nil),                 // 10: raptor.agent.v1.Event
	(*ProcessEvent)(nil),          // 11: raptor.agent.v1.ProcessEvent
	(*FileEvent)(nil),             // 12: raptor.agent.v1.FileEvent
	(*NetworkEvent)(nil),          // 13: raptor.agent.v1.NetworkEvent
	(*RegistryEvent)(nil),         // 14: raptor.agent.v1.RegistryEvent
	(*AuthEvent)(nil),             // 15: raptor.agent.v1.AuthEvent
	(*GetTasksRequest)(nil),       // 16: raptor.agent.v1.GetTasksRequest
	(*GetTasksResponse)(nil),      // 17: raptor.agent.v1.GetTasksResponse
	(*Task)(nil),                  // 18: raptor.agent.v1.Task
	(*TaskResult)(nil),            // 19: raptor.agent.v1.TaskResult
	(*TaskResultResponse)(nil),    // 20: raptor.agent.v1.TaskResultResponse
	(*HeartbeatRequest)(nil),      // 21: raptor.agent.v1.HeartbeatRequest
	(*HeartbeatResponse)(nil),     // 22: raptor.agent.v1.HeartbeatResponse
	(*AgentStatus)(nil),           // 23: raptor.agent.v1.AgentStatus
	(*AgentStats)(nil),            // 24: raptor.agent.v1.AgentStats
	nil,                           // 25: raptor.agent.v1.RegisterAgentRequest.TagsEntry
	nil,                           // 26: raptor.agent.v1.FilterRule.FieldsEntry
	nil,                           // 27: raptor.agent.v1.Event.TagsEntry
	nil,                           // 28: raptor.agent.v1.ProcessEvent.HashesEntry
	nil,                           // 29: raptor.agent.v1.FileEvent.HashesEntry
	nil,                           // 30: raptor.agent.v1.Task.ParametersEntry
	(*timestamppb.Timestamp)(nil), // 31: google.protobuf.Timestamp
}
var file_proto_agent_proto_depIdxs = []int32{
	4,  // 0: raptor.agent.v1.RegisterAgentRequest.capabilities:type_name -> raptor.agent.v1.AgentCapabilities
	25, // 1: raptor.agent.v1.RegisterAgentRequest.tags:type_name -> raptor.agent.v1.RegisterAgentRequest.TagsEntry
	5,  // 2: raptor.agent.v1.RegisterAgentResponse.config:type_name -> raptor.agent.v1.AgentConfig
	6,  // 3: raptor.agent.v1.AgentConfig.collection:type_name -> raptor.agent.v1.CollectionConfig
	7,  // 4: raptor.agent.v1.AgentConfig.filters:type_name -> raptor.agent.v1.FilterRule
	0,  // 5: raptor.agent.v1.FilterRule.action:type_name -> raptor.agent.v1.FilterAction
	1,  // 6: raptor.agent.v1.FilterRule.condition:type_name -> raptor.agent.v1.FilterCondition
	26, // 7: raptor.agent.v1.FilterRule.fields:type_name -> raptor.agent.v1.FilterRule.FieldsEntry
	31, // 8: raptor.agent.v1.TelemetryBatch.timestamp:type_name -> google.protobuf.Timestamp
	10, // 9: raptor.agent.v1.TelemetryBatch.events:type_name -> raptor.agent.v1.Event
	31, // 10: raptor.agent.v1.Event.timestamp:type_name -> google.protobuf.Timestamp
	27, // 11: raptor.agent.v1.Event.tags:type_name -> raptor.agent.v1.Event.TagsEntry
	11, // 12: raptor.agent.v1.Event.process_event:type_name -> raptor.agent.v1.ProcessEvent
	12, // 13: raptor.agent.v1.Event.file_event:type_name -> raptor.agent.v1.FileEvent
	13, // 14: raptor.agent.v1.Event.network_event:type_name -> raptor.agent.v1.NetworkEvent
	14, // 15: raptor.agent.v1.Event.registry_event:type_name -> raptor.agent.v1.RegistryEvent
	15, // 16: raptor.agent.v1.Event.auth_event:type_name -> raptor.agent.v1.AuthEvent
	28, // 17: raptor.agent.v1.ProcessEvent.hashes:type_name -> raptor.agent.v1.ProcessEvent.HashesEntry
	29, // 18: raptor.agent.v1.FileEvent.hashes:type_name -> raptor.agent.v1.FileEvent.HashesEntry
	31, // 19: raptor.agent.v1.GetTasksRequest.last_check:type_name -> google.protobuf.Timestamp
	18, // 20: raptor.agent.v1.GetTasksResponse.tasks:type_name -> raptor.agent.v1.Task
	30, // 21: raptor.agent.v1.Task.parameters:type_name -> raptor.agent.v1.Task.ParametersEntry
	31, // 22: raptor.agent.v1.Task.created_at:type_name -> google.protobuf.Timestamp
	31, // 23: raptor.agent.v1.Task.expires_at:type_name -> google.protobuf.Timestamp
	31, // 24: raptor.agent.v1.TaskResult.completed_at:type_name -> google.protobuf.Timestamp
	31, // 25: raptor.agent.v1.HeartbeatRequest.timestamp:type_name -> google.protobuf.Timestamp
	23, // 26: raptor.agent.v1.HeartbeatRequest.status:type_name -> raptor.agent.v1.AgentStatus
	24, // 27: raptor.agent.v1.HeartbeatRequest.stats:type_name -> raptor.agent.v1.AgentStats
	5,  // 28: raptor.agent.v1.HeartbeatResponse.config_update:type_name -> raptor.agent.v1.AgentConfig
	31, // 29: raptor.agent.v1.AgentStatus.last_event_time:type_name -> google.protobuf.Timestamp
	2,  // 30: raptor.agent.v1.AgentService.RegisterAgent:input_type -> raptor.agent.v1.RegisterAgentRequest
	8,  // 31: raptor.agent.v1.AgentService.SendTelemetry:input_type -> raptor.agent.v1.TelemetryBatch
	16, // 32: raptor.agent.v1.AgentService.GetTasks:input_type -> raptor.agent.v1.GetTasksRequest
	19, // 33: raptor.agent.v1.AgentService.SendTaskResult:input_type -> raptor.agent.v1.TaskResult
	21, // 34: raptor.agent.v1.AgentService.Heartbeat:input_type -> raptor.agent.v1.HeartbeatRequest
	3,  // 35: raptor.agent.v1.AgentService.RegisterAgent:output_type -> raptor.agent.v1.RegisterAgentResponse
	9,  // 36: raptor.agent.v1.AgentService.SendTelemetry:output_type -> raptor.agent.v1.TelemetryResponse
	17, // 37: raptor.agent.v1.AgentService.GetTasks:output_type -> raptor.agent.v1.GetTasksResponse
	20, // 38: raptor.agent.v1.AgentService.SendTaskResult:output_type -> raptor.agent.v1.TaskResultResponse
	22, // 39: raptor.agent.v1.AgentService.Heartbeat:output_type -> raptor.agent.v1.HeartbeatResponse
	35, // [35:40] is the sub-list for method output_type
	30, // [30:35] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_proto_agent_proto_init() }
func file_proto_agent_proto_init() {
	if File_proto_agent_proto != nil {
		return
	}
	file_proto_agent_proto_msgTypes[8].OneofWrappers = []any{
		(*Event_ProcessEvent)(nil),
		(*Event_FileEvent)(nil),
		(*Event_NetworkEvent)(nil),
		(*Event_RegistryEvent)(nil),
		(*Event_AuthEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_agent_proto_rawDesc), len(file_proto_agent_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_agent_proto_goTypes,
		DependencyIndexes: file_proto_agent_proto_depIdxs,
		EnumInfos:         file_proto_agent_proto_enumTypes,
		MessageInfos:      file_proto_agent_proto_msgTypes,
	}.Build()
	File_proto_agent_proto = out.File
	file_proto_agent_proto_goTypes = nil
	file_proto_agent_proto_depIdxs = nil
}
